@implements IDisposable

<nav class="flex flex-col flex-shrink-0 h-auto md:h-full justify-between md:overflow-y-scroll
            bg-gray-800 border-b-2 md:border-b-0 border-r-0 md:border-r-2 border-gray-600
            p-4 gap-3 scrollbar-none text-white">
    <div class="flex flex-row">
        <a href="/" class="hidden md:block">
            <h1 class="text-3xl">მიეცი.ჯი</h1>
        </a>

        <div class="flex md:hidden flex-row justify-between items-center flex-grow">
            <a href="/" class="text-3xl">მიეცი.ჯი</a>

            <button @onclick="@(() => Expanded = !Expanded)">
                <Heroicon Name="@HeroiconName.Bars3" type="@HeroiconType.Outline" class="w-8 h-8"/>
            </button>
        </div>
    </div>

    <div class="@(Expanded ? "flex" : "hidden") md:flex text-lg flex-col flex-grow gap-3 pb-2 md:pb-0">
        @foreach (var (href, iconName, name) in Links)
        {
            <NavLink href="@href"
                     class="flex flex-row gap-2 p-3 rounded-md drop-shadow-md shadow-gray-200 text-gray-200 hover:text-black bg-gray-600 hover:bg-gray-200"
                     ActiveClass="!text-black !bg-gray-200">
                <Heroicon Name="@iconName" Type="@HeroiconType.Outline" class="w-6 h-6"/>
                @name
            </NavLink>
        }

        <NavLink
            @onclick="@(() => throw new Exception("controlled exception"))"
            class="flex flex-row gap-2 p-3 rounded-md drop-shadow-md shadow-gray-200 text-red-200 hover:text-black bg-red-700 hover:bg-red-200">
            <Heroicon Name="@HeroiconName.ExclamationTriangle" Type="@HeroiconType.Outline" class="w-6 h-6"/>
            Error
        </NavLink>
    </div>
</nav>

@code
{
    private static readonly List<(string href, string iconName, string name)> Links =
    [
        ("vote", HeroiconName.Megaphone, "ხმის მიცემა"),
        ("stats", HeroiconName.ChartPie, "სტატისტიკა"),
        // TODO replace with actual
        ("voters/0x94a784c58608a74aedc09dbc47541ca971fa2cdaeb", HeroiconName.Briefcase, "ჩემი ხმები"),
        ("blog", HeroiconName.DocumentText, "ბლოგი"),
        // TODO this was moved to FAQ ("about", HeroiconName.Link, "როგორ მუშაობს"),
        ("faq", HeroiconName.QuestionMarkCircle, "ხშირად დასმული კითხვები"),
    ];

    private bool Expanded { get; set; }

    private void SetExpandedToFalse(object? _, LocationChangedEventArgs args)
    {
        Expanded = false;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        NavigationManager.LocationChanged += SetExpandedToFalse;
    }

    void IDisposable.Dispose()
    {
        NavigationManager.LocationChanged -= SetExpandedToFalse;
    }
}