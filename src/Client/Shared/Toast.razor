<div class="blazored-toast-@(Level.ToString().ToLower()) break-all font-archyedt flex items-center gap-3 p-4 py-2 rounded-md bg-background border-2 @ColorClass">
    <Heroicon Name="@IconName" class="blazored-toast-icon flex-shrink-0 size-6"/>

    <div class="blazored-toast-message text-lg leading-5 font-medium">
        @ChildContent
    </div>

    <button type="button"
            @onclick="Close"
            class="blazored-toast-close ms-auto inline-flex items-center justify-center p-1.5 rounded-md focus:ring-4 hover:bg-gray-700 @CloseButtonColorClass">
        <Heroicon Name="@HeroiconName.XMark" class="size-6"/>
    </button>
</div>

@code
{
    [Parameter, EditorRequired]
    public ToastLevel Level { get; set; }

    [Parameter, EditorRequired]
    public IToastService ToastService { get; set; } = default!;

    [Parameter, EditorRequired]
    public RenderFragment ChildContent { get; set; } = default!;

    private string ColorClass => Level switch
    {
        ToastLevel.Info => "text-sky-300 border-sky-400",
        ToastLevel.Success => "text-green-300 border-green-400",
        ToastLevel.Warning => "text-yellow-300 border-yellow-400",
        ToastLevel.Error => "text-red-300 border-red-400",
        _ => throw new ArgumentOutOfRangeException(),
    };

    private string CloseButtonColorClass => Level switch
    {
        ToastLevel.Info => "focus:ring-sky-800",
        ToastLevel.Success => "focus:ring-green-800",
        ToastLevel.Warning => "focus:ring-yellow-800",
        ToastLevel.Error => "focus:ring-red-800",
        _ => throw new ArgumentOutOfRangeException(),
    };

    private string IconName => Level switch
    {
        ToastLevel.Info => HeroiconName.ExclamationCircle,
        ToastLevel.Success => HeroiconName.CheckCircle,
        ToastLevel.Warning => HeroiconName.QuestionMarkCircle,
        ToastLevel.Error => HeroiconName.ExclamationTriangle,
        _ => throw new ArgumentOutOfRangeException(),
    };

    private void Close()
    {
        ToastService.ClearCustomToasts();
    }
}