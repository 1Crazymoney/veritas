@page "/blockchain/voters/{VoterAddress}"
@using Application.Dto


<Card Class="flex flex-col items-start cursor-crosshair select-none p-0 md:p-5">
    <div class="flex flex-row w-full gap-3 text-nowrap">
        <div class="flex justify-center flex-shrink-0 items-center w-14 h-14 rounded-md"
             style="background-image: linear-gradient(@WebUtil.GetGradientDegrees(Model.ShortAddress)deg,#6b6dc8,#6b81c8,#9194d1);">
            <Heroicon Name="@HeroiconName.Wallet" class="block w-8 h-8"/>
        </div>

        <div class="flex flex-col items-start justify-center h-full text-lg max-w-sm">
            <span class="text-white">ამომრჩეველი</span>
            <span class="text-wrap text-start break-all text-gray-400 leading-4">
                @Model.Address
            </span>
        </div>
    </div>

    <hr class="border-s border-gray-400 w-full"/>

    <section class="text-start text-lg leading-6 text-gray-400 max-w-md">
        ამ ამომრჩეველს ხმა მიცემული აქვს <span class="text-white">@Model.Votes.Count</span> ჯერ<br/>

        @if (Model.FavoriteParty is { } favoriteParty)
        {
            <span>
                მისი ფავორიტი პარტია არის <span class="@favoriteParty.GetTextClass()">@favoriteParty.Name.</span><br/>
            </span>
        }
        else
        {
            @:მას არ ჰყავს ფავორიტი პარტია.<br/>
        }

        @if (Model.LastVoteTime is { } lastVoteTime)
        {
            <span class="[&>span]:text-white">
                ბოლოს ხმა მიცემული აქვს
                <span>@lastVoteTime.ToString("d")</span>-ში
                <span>@lastVoteTime.ToString("HH:mm:ss")</span>-ზე<br/>
                <TimeTracker For="@lastVoteTime"/>-ის წინ
            </span>
        }
    </section>

    <hr class="border-s border-gray-400 w-full"/>

    <VoteList Votes="@Model.Votes" Max="100"/>
</Card>

@code
{
    [Parameter]
    public string VoterAddress { get; set; } = string.Empty;

    private VoterDto Model { get; } = VoterDto.RandomVoterDto(Random.Shared.Next(0, 50));
}