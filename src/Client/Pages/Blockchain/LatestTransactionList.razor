@using System.Security.Cryptography
@using Domain.Common

<div class="flex flex-col justify-between gap-3">
    <h2 class="hidden md:block text-3xl" @onclick="@(() => AddTransaction(NextTransaction))">Latest Votes</h2>

    @foreach (var transactions in _transactions)
    {
        <LatestTransactionEntry @key="@transactions.Hash" Transaction="@transactions"/>
    }
</div>

@code
{
    private static string RandomString()
    {
        var buffer = new byte[16];
        Random.Shared.NextBytes(buffer);
        return SHA256.HashData(buffer).ToHexString();
    }

    private List<LatestTransactionEntry.MinimalTransaction> _transactions =
    [
        new LatestTransactionEntry.MinimalTransaction(RandomString(), DateTime.Now, new Party(Random.Shared.GetItems([5, 9, 36, 42], 1)[0]), "0x" + RandomString()[22..]),
        new LatestTransactionEntry.MinimalTransaction(RandomString(), DateTime.Now.AddDays(-1), new Party(Random.Shared.GetItems([5, 9, 36, 42], 1)[0]), "0x" + RandomString()[22..]),
        new LatestTransactionEntry.MinimalTransaction(RandomString(), DateTime.Now.AddDays(-2), new Party(Random.Shared.GetItems([5, 9, 36, 42], 1)[0]), "0x" + RandomString()[22..]),
    ];

    private LatestTransactionEntry.MinimalTransaction NextTransaction => new(
        RandomString(),
        DateTime.Now,
        new Party(Random.Shared.GetItems([5, 9, 36, 42], 1)[0]),
        "0x" + RandomString()[22..]);

    private void AddTransaction(LatestTransactionEntry.MinimalTransaction transactions)
    {
        _transactions.Insert(0, transactions);

        if (_transactions.Count > 10)
            _transactions = _transactions[..^1];
    }
}