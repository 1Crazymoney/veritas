@using System.Security.Cryptography
@using Domain.Common

<div class="flex flex-col justify-start overflow-y-scroll h-[80%] p-5 gap-3
            hover:bg-[#303030] backdrop-blur-[3.5px] rounded-md border-2 border-gray-400 shadow-party-card">
    <h2 class="text-3xl">Latest Transactions</h2>

    <button class="p-4 bg-gray-500 rounded-md uppercase" @onclick="@(() => AddTransaction(NextTransaction))">
        add transactions
    </button>

    @foreach (var transactions in _transactionss)
    {
        <LatestTransactionEntry @key="@transactions.Hash" Transaction="@transactions"/>
    }
</div>

@code
{
    private static string RandomString()
    {
        var buffer = new byte[16];
        Random.Shared.NextBytes(buffer);
        return SHA256.HashData(buffer).ToHexString();
    }

    private List<LatestTransactionEntry.MinimalTransaction> _transactionss =
    [
        new LatestTransactionEntry.MinimalTransaction(RandomString(), DateTime.Now, new Party(Random.Shared.GetItems([5, 9, 36, 42], 1)[0]), "0x" + RandomString()[22..]),
        new LatestTransactionEntry.MinimalTransaction(RandomString(), DateTime.Now.AddDays(-1), new Party(Random.Shared.GetItems([5, 9, 36, 42], 1)[0]), "0x" + RandomString()[22..]),
        new LatestTransactionEntry.MinimalTransaction(RandomString(), DateTime.Now.AddDays(-2), new Party(Random.Shared.GetItems([5, 9, 36, 42], 1)[0]), "0x" + RandomString()[22..]),
    ];

    private LatestTransactionEntry.MinimalTransaction NextTransaction => new(
            RandomString(),
            DateTime.Now,
            new Party(Random.Shared.GetItems([5, 9, 36, 42], 1)[0]),
            "0x" + RandomString()[22..]);

    private void AddTransaction(LatestTransactionEntry.MinimalTransaction transactions)
    {
        _transactionss.Insert(0, transactions);

        if (_transactionss.Count > 20)
            _transactionss = _transactionss[..^1];
    }
}