@using Application.Dto

<div class="flex flex-col w-full overflow-y-scroll justify-between gap-3 scrollbar-none">
    @foreach (var vote in Votes)
    {
        <a @key="@vote.Hash"
           href="blockchain/votes/@vote.Hash"
           class="flex flex-row items-center h-12 gap-3 p-4 justify-between cursor-pointer rounded-md
                  bg-[#50505050] hover:bg-[#606060] font-mono text-nowrap border @vote.Party.GetBorderClass()
                  transition-transform animate-[slideDown_0.5s_ease_forwards]">
            <span>
                @vote.ShortHash
            </span>

            <span class="text-gray-400">
                @(vote.Added.ToString("HH:mm:ss"))
            </span>

            <span class="@vote.Party.GetTextClass() font-extrabold font-2xl">
                @vote.Party.Id
            </span>

            <a href="blockchain/voters/@vote.VoterAddress" class="text-gray-400 truncate hover:underline">
                @vote.ShortVoter
            </a>
        </a>
    }
</div>

@code
{
    [Parameter, EditorRequired]
    public List<VoteDto> Votes { get; set; } = [];

    [Parameter]
    public int Max { get; set; } = 10;

    public void AddTransaction(VoteDto votes)
    {
        Votes.Insert(0, votes);

        if (Votes.Count > Max)
            Votes = Votes[..^1];
    }
}