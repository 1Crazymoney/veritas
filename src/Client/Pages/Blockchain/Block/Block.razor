@page "/blockchain/blocks/{Hash}"
@page "/blockchain/blocks/{Index:long}"
@using Application.Dto


<AppSection Class="h-full flex flex-col items-start cursor-crosshair select-none p-5">
    <div class="flex flex-row w-full gap-3 text-nowrap">
        <div class="flex justify-center items-center w-14 md:h-14 rounded-md"
             style="background-image: linear-gradient(@WebUtil.GetGradientDegrees(Model.Index)deg,#c8956b,#c8ab6b,#d1ce91);">
            <Heroicon Name="@HeroiconName.Link" class="block w-8 h-8"/>
        </div>

        <div class="flex flex-col items-start justify-center h-full text-lg">
            <span class="text-gray-400">ბლოკი</span>
            <span class="truncate">
                @Model.Index.ToString("N0")
            </span>
        </div>
    </div>

    <hr class="border-s border-gray-400 w-full"/>

    <section class="text-start text-lg leading-6 text-gray-400 max-w-md [&>b]:text-white">
        ამ ბლოკში სულ არის <b>@Model.Votes.Count</b> ხმა<br/>
        და პირველ ადგილას არის:
        <span class="@Model.TopParty.GetTextClass()">
            @Model.TopParty.Name.
        </span>
    </section>

    <hr class="border-s border-gray-400 w-full"/>

    <section class="flex w-full flex-shrink-0 flex-col text-start text-lg max-w-md text-nowrap truncate -space-y-1">
        <div class="flex flex-row justify-between [&>property]:text-white [&>value]:text-gray-400">
            <property>ჰეში</property>
            <value>@Model.ShortHash</value>
        </div>

        <div class="flex flex-row justify-between [&>property]:text-white [&>value]:text-gray-400">
            <property>ნონსი</property>
            <value>@Model.Nonce.ToString("N0")</value>
        </div>

        <div class="flex flex-row justify-between [&>property]:text-white [&>value]:text-gray-400">
            <property>ხმების რაოდენობა</property>
            <value>@Model.Votes.Count.ToString("N0")</value>
        </div>

        <div class="flex flex-row justify-between [&>property]:text-white [&>value]:text-gray-400">
            <property>ტევადობა</property>
            <value>@(((float)Model.Votes.Count / 128).ToString("P2"))</value>
        </div>

        <div class="flex flex-row justify-between [&>property]:text-white [&>value]:text-gray-400">
            <property>მაინინგ დრო</property>
            <TimeTracker For="@Model.Mined" class="text-gray-400"/>
        </div>

        <div class="flex flex-row justify-between [&>property]:text-white [&>value]:text-gray-400">
            <property>Mrkl root</property>
            <value>@Model.ShortMerkleRoot</value>
        </div>

        <div class="flex flex-row justify-between [&>property]:text-white [&>value]:text-gray-400">
            <property>წინა ბლოკის ჰეში</property>
            <value>@Model.ShortPreviousHash</value>
        </div>

        <div class="w-full">
            <button class="w-full mt-2 border border-green-600 text-2xl rounded-md" @onclick="Verify">
                ვერიფიკაცია
            </button>
        </div>
    </section>

    <hr class="border-s border-gray-400 w-full"/>

    <VoteList Votes="@Model.Votes" Max="100"/>
</AppSection>

@code
{
    [Parameter]
    public string Hash { get; set; } = string.Empty;

    [Parameter]
    public long? Index { get; set; }

    private BlockDto Model { get; set; } = BlockDto.RandomBlockDto();

    private void Verify()
    {
        var hashValid = Model.Hash.StartsWith(new string('0', Domain.Entities.Block.Difficulty));

        if (hashValid)
            Toast.ShowSuccess("ბლოკი არის ვალიდური");
        else
            Toast.ShowError("ბლოკი არ არის ვალიდური");
    }
}